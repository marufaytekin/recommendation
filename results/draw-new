 f = figure();
 bar(numberOfRatings * 10, numberOfUsers);
 xlabel('Number of Ratings');
 ylabel('Number of Users');
 title('Amazon 1M Data Set');
 write(f, 'amazon-1m-histo');


function write (f, file_name)
  H = 3.2; W = 4;
  h = f;
  set (h,'papertype', '<custom>')
  set (h,'paperunits','inches');
  set (h,'papersize',[H W])
  set (h,'paperposition', [0,0,[W H]])
  set (h,'defaultaxesposition', [0.15, 0.15, 0.75, 0.75])
  set (0,'defaultaxesfontsize', 10)
  out_file_name = strcat (file_name,'.eps');
  print('-depsc', out_file_name);
endfunction

write (f, 'ml-mae-k');


# ========================================================
# MAE and Runtime
# Hash Tables
# ========================================================

x = 1:10;
n = 10;
f= figure();
y1 = UBKNNMaeList;
y2 = IBKNNMaeList;
y3 = UBKNNLSHHashTablesMaeList;
y4 = IBKNNLSHHashTablesMaeList;
y5 = UBLSH1HashTablesMaeList;
y6 = UBLSH2HashTablesMaeList;
y7 = IBLSH1HashTablesMaeList;
y8 = IBLSH2HashTablesMaeList;
plot ([1,n], [y1, y1],'-.k', [1,n], [y2, y2],'--k', x, y3,'-dk', x, y4,'-*k', x, y5,'-+k', x, y6,'->k', x, y7,'-ok', x, y8,'-<k');
h = legend('UB-KNN', 'IB-KNN', 'UB-KNN-LSH', 'IB-KNN-LSH', 'UB-LSH1', 'UB-LSH2', 'IB-LSH1', 'IB-LSH2', 'location', 'northeast');
xlabel('Number of Hash Tables');
ylabel('MAE');
legend boxon;
#ylim([0.5 1.8])
write(f, strcat(fileName,'-hash-tables-mae'));

f= figure();
x = 1:10;
y1 = UBKNNRuntimeList;
y2 = IBKNNRuntimeList;
y3 = UBKNNLSHHashTablesRuntimeList;
y4 = IBKNNLSHHashTablesRuntimeList;
y5 = UBLSH1HashTablesRuntimeList;
y6 = UBLSH2HashTablesRuntimeList;
y7 = IBLSH1HashTablesRuntimeList;
y8 = IBLSH2HashTablesRuntimeList;
plot (x, y5,'-+k', x, y6,'->k', x, y7,'-ok', x, y8,'-<k');
h = legend('UB-LSH1', 'UB-LSH2', 'IB-LSH1', 'IB-LSH2', 'location', 'northeast');
xlabel('Number of Hash Tables');
ylabel('Run Time(ms/prediction)');
legend boxon;
write(f, strcat(fileName,'-hash-tables-runtime'));

f= figure();
y3 = UBKNNLSHHashTablesCandidateSetList;
y4 = IBKNNLSHHashTablesCandidateSetList;
y5 = UBLSH1HashTablesCandidateSetList;
y6 = UBLSH2HashTablesCandidateSetList;
y7 = IBLSH1HashTablesCandidateSetList;
y8 = IBLSH2HashTablesCandidateSetList;
plot (x, y3,'-dk', x, y4,'-*k',x, y5,'-+k', x, y6,'->k', x, y7,'-ok', x, y8,'-<k');
h = legend('UB-KNN-LSH', 'IB-KNN-LSH', 'UB-LSH1', 'UB-LSH2', 'IB-LSH1', 'IB-LSH2', 'location', 'northwest');
xlabel('Number of Hash Tables');
ylabel('Candidate set size');
legend boxon;
write(f, strcat(fileName,'-hash-tables-candidate-set'));


# ========================================================
# Hash Functions against to MAE and Runtime
# test case: 5000
# ========================================================

x = 1:10;
n = 10;
f= figure();
y1 = UBKNNMaeList;
y2 = IBKNNMaeList;
y3 = UBKNNLSHHashFunctionsMaeList;
y4 = IBKNNLSHHashFunctionsMaeList;
y5 = UBLSH1HashFunctionsMaeList;
y6 = UBLSH2HashFunctionsMaeList;
y7 = IBLSH1HashFunctionsMaeList;
y8 = IBLSH2HashFunctionsMaeList;
plot ([1,n], [y1, y1],'-.k', [1,n], [y2, y2],'--k', x, y3,'-dk', x, y4,'-*k', x, y5,'-+k', x, y6,'->k', x, y7,'-ok', x, y8,'-<k');
h = legend('UB-KNN', 'IB-KNN', 'UB-KNN-LSH', 'IB-KNN-LSH', 'UB-LSH1', 'UB-LSH2', 'IB-LSH1', 'IB-LSH2', 'location', 'northwest');
xlabel('Number of Hash Functions');
ylabel('MAE');
legend boxon;
#ylim([0.5 1.8])
write(f, strcat(fileName,'-hash-functions-mae'));

f= figure();
x = 5:10;
y1 = UBKNNRuntimeList;
y2 = IBKNNRuntimeList;
y3 = UBKNNLSHHashFunctionsRuntimeList(5:10);
y4 = IBKNNLSHHashFunctionsRuntimeList(5:10);
y5 = UBLSH1HashFunctionsRuntimeList(5:10);
y6 = UBLSH2HashFunctionsRuntimeList(5:10);
y7 = IBLSH1HashFunctionsRuntimeList(5:10);
y8 = IBLSH2HashFunctionsRuntimeList(5:10);
plot (x, y3,'-dk', x, y4,'-*k', x, y5,'-+k', x, y6,'->k', x, y7,'-ok', x, y8,'-<k');
h = legend( 'UB-KNN-LSH', 'IB-KNN-LSH', 'UB-LSH1', 'UB-LSH2', 'IB-LSH1', 'IB-LSH2', 'location', 'northeast');
xlabel('Number of Hash Functions');
ylabel('Run Time(ms/prediction)');
legend boxon;
write(f, strcat(fileName,'-hash-functions-runtime'));

f= figure();
y3 = UBKNNLSHHashFunctionsCandidateSetList;
y4 = IBKNNLSHHashFunctionsCandidateSetList;
y5 = UBLSH1HashFunctionsCandidateSetList;
y6 = UBLSH2HashFunctionsCandidateSetList;
y7 = IBLSH1HashFunctionsCandidateSetList;
y8 = IBLSH2HashFunctionsCandidateSetList;
plot (x, y3,'-dk', x, y4,'-*k',x, y5,'-+k', x, y6,'->k', x, y7,'-ok', x, y8,'-<k');
h = legend('UB-KNN-LSH', 'IB-KNN-LSH', 'UB-LSH1', 'UB-LSH2', 'IB-LSH1', 'IB-LSH2', 'location', 'northeast');
xlabel('Number of Hash Functions');
ylabel('Candidate set size');
legend boxon;
write(f, strcat(fileName,'-hash-functions-candidate-set'));


total_test_data = max (UBKNNLSHHashFunctionsPredictedItemsList);
f= figure();
y3 = UBKNNLSHHashFunctionsPredictedItemsList/total_test_data;
y4 = IBKNNLSHHashFunctionsPredictedItemsList/total_test_data;
y5 = UBLSH1HashFunctionsPredictedItemsList/total_test_data;
y6 = UBLSH2HashFunctionsPredictedItemsList/total_test_data;
y7 = IBLSH1HashFunctionsPredictedItemsList/total_test_data;
y8 = IBLSH2HashFunctionsPredictedItemsList/total_test_data;
plot (x, y3,'-dk', x, y4,'-*k',x, y5,'-+k', x, y6,'->k', x, y7,'-ok', x, y8,'-<k');
h = legend('UB-KNN-LSH', 'IB-KNN-LSH', 'UB-LSH1', 'UB-LSH2', 'IB-LSH1', 'IB-LSH2', 'location', 'west');
xlabel('Number of Hash Functions');
ylabel('Prediction Ratio');
write(f, strcat(fileName,'-hash-functions-prediction-ratio'));


# =================================================
# Throughput
# =================================================
f = figure();
y1 = 1000 * testdatasize / UBRuntime;
y2 = 1000 * testdatasize / IBRuntime;
y3 = 1000 * UBLSHHashFunctionsPredictedItemsList(4:10) ./ UBLSHHashFunctionsRuntimeList(4:10);
y4 = 1000 * IBLSHHashFunctionsPredictedItemsList(4:10) ./ IBLSHHashFunctionsRuntimeList(4:10);
y5 = 1000 * LSHFreqHashFunctionsPredictedItemsList(1:7) ./ LSHFreqHashFunctionsRuntimeList(1:7);
y6 = 1000 * LSHHashFunctionsPredictedItemsList(4:10) ./ LSHHashFunctionsRuntimeList(4:10);
x = 4:10;
plot ([4,n], [y1, y1],'-.k', [4,n], [y2, y2],'--k', x,y3,'-dk', x,y4,'-xk', x,y5,'-ok', x,y6,'-^k');
h = legend('UB', 'IB', 'UB-LSH', 'IB-LSH', 'LSH1', 'LSH2', 'location', 'northwest');
legend boxon;
xlabel('Number of Hash Functions');
ylabel('Throughput (predictions/sec.)');
write(f, strcat(fileName,'-hash-functions-throughput'));


f = figure();
x = 1:10
y1 = 1000 * testdatasize / UBRuntime;
y2 = 1000 * testdatasize / IBRuntime;
y3 = 1000 * UBLSHHashTablesPredictedItemsList ./ UBLSHHashTablesRuntimeList;
y4 = 1000 * IBLSHHashTablesPredictedItemsList ./ IBLSHHashTablesRuntimeList;
y5 = 1000 * LSHFreqHashTablesPredictedItemsList ./ LSHFreqHashTablesRuntimeList;
y6 = 1000 * LSHHashTablesPredictedItemsList ./ LSHHashTablesRuntimeList;
plot ([1,n], [y1, y1],'-.k', [1,n], [y2, y2],'--k', x,y3,'-dk', x,y4,'-xk', x,y5,'-ok', x,y6,'-^k');
h = legend('UB', 'IB', 'UB-LSH', 'IB-LSH', 'LSH1', 'LSH2', 'location', 'northeast');
legend boxon;
xlabel('Number of Hash Tables');
ylabel('Throughput (predictions/sec.)');
write(f, strcat(fileName,'-hash-tables-throughput'));

# ========================================================
# Number of Hash Functions on the metrics
# ========================================================

max_x = n = 10;
x = 1:max_x;
numOfHashTables = 10;

y1 = mean(UBPrecisionList);
y2 = mean(IBPrecisionList);
y3 = UBLSHHashFunctionsPrecisionList;
y4 = IBLSHHashFunctionsPrecisionList;
y5 = LSHFreqHashFunctionsPrecisionList;
y6 = LSHHashFunctionsPrecisionList;
f= figure();
plot ([1,n], [y1, y1],'-.k', [1,n], [y2, y2],'--k', x,y3,'-dk', x,y4,'-xk', x,y5,'-ok', x,y6,'-^k');
h = legend('UB', 'IB', 'UB-LSH', 'IB-LSH', 'LSH1', 'LSH2', 'location', 'northeast');
legend boxon;
xlabel('Number of Hash Functions');
ylabel('Precision');
write(f, strcat(fileName,'-hash-functions-precision'));

y1 = mean(UBRecallList);
y2 = mean(IBRecallList);
y3 = UBLSHHashFunctionsRecallList;
y4 = IBLSHHashFunctionsRecallList;
y5 = LSHFreqHashFunctionsRecallList;
y6 = LSHHashFunctionsRecallList;
f= figure();
plot ([1,n], [y1, y1],'-.k', [1,n], [y2, y2],'--k', x,y3,'-dk', x,y4,'-xk', x,y5,'-ok', x,y6,'-^k');
h = legend('UB', 'IB', 'UB-LSH', 'IB-LSH', 'LSH1', 'LSH2', 'location', 'northeast');
legend boxon;
xlabel('Number of Hash Functions');
ylabel('Recall')
write(f, strcat(fileName,'-hash-functions-recall'));


# ========================================================
# Number of Hash Tables on the metrics
# ========================================================
n= 10;
x = 1:1:n;
numOfHashFunctions = 6;

y1 = mean(UBPrecisionList);
y2 = mean(IBPrecisionList);
y3 = UBLSHHashTablesPrecisionList;
y4 = IBLSHHashTablesPrecisionList;
y5 = LSHFreqHashTablesPrecisionList;
y6 = LSHHashTablesPrecisionList;
f= figure();
plot ([1,n], [y1, y1],'-.k', [1,n], [y2, y2],'--k', x,y3,'-dk', x,y4,'-xk', x,y5,'-ok', x,y6,'-^k');
h = legend('UB', 'IB', 'UB-LSH', 'IB-LSH', 'LSH1', 'LSH2', 'location', 'northwest');
legend boxon;
xlabel('Number of Hash Tables');
ylabel('Precision');
write(f, strcat(fileName,'-hash-tables-precision'));

y1 = mean(UBRecallList);
y2 = mean(IBRecallList);
y3 = UBLSHHashTablesRecallList;
y4 = IBLSHHashTablesRecallList;
y5 = LSHFreqHashTablesRecallList;
y6 = LSHHashTablesRecallList;
f= figure();
plot ([1,n], [y1, y1],'-.k', [1,n], [y2, y2],'--k', x,y3,'-dk', x,y4,'-xk', x,y5,'-ok', x,y6,'-^k');
h = legend('UB', 'IB', 'UB-LSH', 'IB-LSH', 'LSH1', 'LSH2', 'location', 'northwest');
legend boxon;
xlabel('Number of Hash Tables');
ylabel('Recall')
write(f, strcat(fileName,'-hash-tables-recall'));


# ========================================================
# test case: LSH 2D
# test case:
# ========================================================
dataFileBase = data/1m/ml-1m
x = 1:10;
y = 1:10;

f= figure();

# Heatmaps
data = LSHMae2D;
contourf(x, y, data);
axis square;
colorbar;
xlabel("Hash Functions");
ylabel("Hash Tables");
title("MAE");
write(f, strcat(fileName,'-lsh-heat-map-mae'));

f= figure();
data = LSHRuntime2D / testdatasize;
contourf(x, y, data);
axis square;
colorbar;
xlabel("Hash Functions");
ylabel("Hash Tables");
title("Running Time (ms/prediction)");
write(f, strcat(fileName,'-lsh-heat-map-runtime'));

f= figure();
data = LSHCandidate_Set_List2D;
contourf(x, y, data);
axis square;
colorbar;
xlabel("Hash Functions");
ylabel("Hash Tables");
title("Candidate Set Size");
write(f, strcat(fileName,'-lsh-heat-map-candidate'));
