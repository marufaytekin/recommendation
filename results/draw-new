 f = figure();
 bar(numberOfRatings * 10, numberOfUsers);
 xlabel("Number of Ratings");
 ylabel("Number of Users");
 title("Amazon 1M Data Set");
 write(f, "amazon-1m-histo");


function write (f, file_name)
  H = 3.2; W = 4;
  h = f;
  set (h,'papertype', '<custom>')
  set (h,'paperunits','inches');
  set (h,'papersize',[H W])
  set (h,'paperposition', [0,0,[W H]])
  set (h,'defaultaxesposition', [0.15, 0.15, 0.75, 0.75])
  set (0,'defaultaxesfontsize', 10)
  out_file_name = strcat (file_name,'.pdf');
  print('-dpdf',  out_file_name);
endfunction

write (f, "ml-mae-k");


# ========================================================
# Model build time
# Test case: 8
# ========================================================

# Running time

x = UBnumOfUsersList/1000;
x2 = IBnumOfItemsList/1000;
y1 = UBmodelBuildTimeList/1000;
y2 = IBmodelBuildTimeList/1000;
y3 = UBLSHmodelBuildTimeList/1000;
y4 = IBLSHmodelBuildTimeList/1000;

f= figure();
plot (x, y1, '-dk', x, y3, '--*k');
legend("UB","UB-LSH", "location", "northwest");
xlabel("users(x1000)")
ylabel("Model Build Time (sec)");
write(f, strcat(fileName,'-model-build-time-ub'));

f= figure();
plot (x2, y2, '-dk', x2, y4, '--*k' );
legend("IB", "IB-LSH", "location", "northwest");
xlabel("items(x1000)")
ylabel("Model Build Time(sec)");
write(f, strcat(fileName,'-model-build-time-ib'));


# ========================================================
# Hash Tables against to MAE and Runtime
# test case: 5000
# ========================================================
x = 1:10;
n = 10;

f= figure();
y1 = UBMaeList;
y2 = IBMaeList;
y3 = UBLSHHashTablesMaeList(1:10);
y4 = IBLSHHashTablesMaeList(1:10);
y5 = LSHHashTablesMaeList(1:10);
plot ([1,n], [y1, y1], '-.k', [1,n], [y2, y2],'--k', x, y3 , '-dk', x, y4, '-xk', x, y5, '-ok');
xlabel("Number of Hash Tables");
ylabel("MAE");
legend("UB", "IB","UB-LSH", "IB-LSH", "LSH", "location", "northeast");
legend boxon;
write(f, strcat(fileName,'-hash-tables-mae'));

f= figure();
y1 = UBRuntime/1000;
y2 = IBRuntime/1000;
y3 = UBLSHHashTablesRuntimeList(1:10)/1000;
y4 = IBLSHHashTablesRuntimeList(1:10)/1000;
y5 = LSHHashTablesRuntimeList(1:10)/1000;
plot([1,n], [y1, y1], '-.k', [1,n], [y2, y2],'--k', x, y3, '-dk', x, y4, '-*k', x, y5, '-ok');
xlabel("Number of Hash Tables");
ylabel("Running Time (sec)");
legend("UB", "IB","UB-LSH", "IB-LSH", "LSH", "location", "northwest");
legend boxon;
write(f, strcat(fileName,'-hash-tables-runtime'));

f= figure();
y1 = numOfUsers/1000;
y2 = numOfItems/1000;
y3 = UBLSHHashTablesCandidateSetList(1:10)/1000;
y4 = IBLSHHashTablesCandidateSetList(1:10)/1000;
y5 = LSHHashTablesLSHCandidateSetList(1:10)/1000;
plot(x, y3, '-dk',x, y4, '-*k', x, y5, '-ok');
xlabel("Number of Hash Tables");
ylabel("Candidate set size (K)");
legend("UB-LSH", "IB-LSH", "LSH", "location", "northwest");
legend boxon;
write(f, strcat(fileName,'-hash-tables-candidate-set'));


# ========================================================
# Hash Functions against to MAE and Runtime
# test case: 5000
# ========================================================

x = 1:20;
n = 20;

f = figure();
y1 = UBMaeList;
y2 = IBMaeList;
y3 = UBLSHHashFunctionsMaeList;
y4 = IBLSHHashFunctionsMaeList;
y5 = LSHHashFunctionsMaeList;
plot([1,n], [y1, y1], '-.k', [1,n], [y2, y2],'--k', x, y3, '-dk',x, y4, '-*k', x,y5,'-ok');
xlabel("Number of Hash Functions");
ylabel("MAE");
legend("UB", "IB", "UB-LSH", "IB-LSH", "LSH", "location", "northwest");
legend boxon;
write(f, strcat(fileName,'-hash-functions-mae'));

f= figure();
y1 = UBRuntime/1000;
y2 = IBRuntime/1000;
y3 = UBLSHHashFunctionsRuntimeList/1000;
y4 = IBLSHHashFunctionsRuntimeList/1000;
y5 = LSHHashFunctionsRuntimeList/1000;
plot([1,n], [y1, y1], '-.k', [1,n], [y2, y2],'--k', x, y3, '-dk',x, y4, '-*k', x,y5,'-ok');
xlabel("Number of Hash Functions");
ylabel("Running Time (sec)");
legend("UB", "IB", "UB-LSH", "IB-LSH", "LSH", "location", "northeast");
legend boxon;
write(f, strcat(fileName,'-hash-functions-runtime'));

f = figure();
y3 = UBLSHHashFunctionsCandidateSetList;
y4 = IBLSHHashFunctionsCandidateSetList;
y5 = LSHHashFunctionsCandidateSetList;
plot( x, y3, '-dk',x, y4, '-*k', x,y5,'-ok');
legend("UB-LSH", "IB-LSH", "LSH", "location", "northeast");
legend boxon;
xlabel("Number of Hash Functions");
ylabel("Avg. Candidate Set Size");
write(f, strcat(fileName,'-hash-functions-candidate-set'));

f = figure();
x = 1:10;
total_test_data = 9939;
y2 = UBLSHHashFunctionsPredictedItemsList(1:10)/total_test_data;
y3 = IBLSHHashFunctionsPredictedItemsList(1:10)/total_test_data;
y5 = LSHHashFunctionsPredictedItemsList(1:10)/total_test_data;
plot(x, y2, '-dk', x, y3, '-*k', x,y5,'-ok');
legend("UB-LSH", "IB-LSH", "LSH", "location", "northeast");
legend boxon;
xlabel("Number of Hash Functions");
ylabel("Prediction Ratio");
write(f, strcat(fileName,'-hash-functions-prediction-ratio'));


# =================================================
# Throughput
# =================================================
f = figure();
y2 = 1000 * UBLSHHashFunctionsPredictedItemsList ./ UBLSHHashFunctionsRuntimeList;
y3 = 1000 * IBLSHHashFunctionsPredictedItemsList ./ IBLSHHashFunctionsRuntimeList;
y5 = 1000 * LSHHashFunctionsPredictedItemsList ./ LSHHashFunctionsRuntimeList;
x = 1:10;
plot(x, y2(1:10), '-dk', x, y3(1:10), '-*k', x,y5(1:10),'-ok');
legend("UB-LSH", "IB-LSH", "LSH", "location", "northwest");
legend boxon;
xlabel("Number of Hash Functions");
ylabel("Throughput (predictions/sec.)");
write(f, strcat(fileName,'-hash-functions-throughput'));


f = figure();
y2 = 1000 * UBLSHHashTablesPredictedItemsList ./ UBLSHHashTablesRuntimeList;
y3 = 1000 * IBLSHHashTablesPredictedItemsList ./ IBLSHHashTablesRuntimeList;
y5 = 1000 * LSHHashTablesPredictedItemsList ./ LSHHashTablesRuntimeList;
plot(x, y2(1:10), '-dk', x, y3(1:10), '-*k', x,y5(1:10),'-ok');
legend("UB-LSH", "IB-LSH", "LSH", "location", "west");
legend boxon;
xlabel("Number of Hash Tables");
ylabel("Throughput (predictions/sec.)");
write(f, strcat(fileName,'-hash-tables-throughput'));

# ========================================================
# Number of Hash Functions on the metrics
# ========================================================

max_x = n = 10;
x = 1:max_x;
numOfHashTables = 10;

y1 = mean(UBPrecisionList);
y2 = mean(IBPrecisionList);
y3 = UBLSHHashFunctionsPrecisionList0;
y4 = IBLSHHashFunctionsPrecisionList0;
y5 = LSHFreqHashFunctionsPrecisionList;
y6 = LSHHashFunctionsPrecisionList;

f= figure();
plot ([1,n], [y1, y1],'-.k', [1,n], [y2, y2],'--k', x,y3,'-dk', x,y4,'-*k', x,y5,'-ok', x,y6,'->k');
h = legend("UB", "IB", "UB-LSH", "IB-LSH", "LSH1", "LSH2", "location", "northeast");
legend boxon;
xlabel("Number of Hash Functions");
ylabel("Precision");
write(f, strcat(fileName,'-hash-functions-precision'));

y1 = mean(UBRecallList);
y2 = mean(IBRecallList);
y3 = UBLSHHashFunctionsRecallList0;
y4 = IBLSHHashFunctionsRecallList0;
y5 = LSHFreqHashFunctionsRecallList;
y6 = LSHHashFunctionsRecallList;
f= figure();
plot ([1,n], [y1, y1],'-.k', [1,n], [y2, y2],'--k', x,y3,'-dk', x,y4,'-*k', x,y5,'-ok', x,y6,'->k');
legend("UB", "IB", "UB-LSH", "IB-LSH", "LSH1", "LSH2", "location", "northeast");
legend boxon;
xlabel("Number of Hash Functions");
ylabel("Recall")
write(f, strcat(fileName,'-hash-functions-recall'));

y1 = numOfUsers/1000;
y2 = numOfItems/1000;
y3 = UBLSHHashFunctionsCandidateSetList0/1000;
y4 = IBLSHHashFunctionsCandidateSetList0/1000;
f= figure();
plot(x, y3, '-dk',x, y4, '-*k');
plot ([1,n], [y1, y1],'-.k', [1,n], [y2, y2],'--k', x,y3,'-dk', x,y4,'-*k');
legend("numofUsers", "numOfItems","UB-LSH", "IB-LSH");
legend boxon;
xlabel("Number of Hash Functions");
ylabel("Avg. Candidate Set Size (K)")
write(f, strcat(fileName,'-hash-functions-evaluation-candidate-set'));



# ========================================================
# Number of Hash Tables on the metrics
# ========================================================
n= 10;
x = 1:1:n;
numOfHashFunctions = 6;

y1 = mean(UBPrecisionList);
y2 = mean(IBPrecisionList);
y3 = UBLSHHashTablesPrecisionList0;
y4 = IBLSHHashTablesPrecisionList0;
y5 = LSHFreqHashTablesFreqPrecisionList;
y6 = LSHHashTablesPrecisionList;
f= figure();
plot ([1,n], [y1, y1],'-.k', [1,n], [y2, y2],'--k', x,y3,'-dk', x,y4,'-*k', x,y5,'-ok', x,y6,'->k');
legend("UB", "IB", "UB-LSH", "IB-LSH", "LSH1", "LSH2", "location", "northeast");
legend boxon;
xlabel("Number of Hash Tables");
ylabel("Precision");
write(f, strcat(fileName,'-hash-tables-precision'));

y1 = mean(UBRecallList);
y2 = mean(IBRecallList);
y3 = UBLSHHashTablesRecallList0;
y4 = IBLSHHashTablesRecallList0;
y5 = LSHFreqHashTablesFreqRecallList;
y6 = LSHHashTablesRecallList;
f= figure();
plot ([1,n], [y1, y1],'-.k', [1,n], [y2, y2],'--k', x,y3,'-dk', x,y4,'-*k', x,y5,'-ok', x,y6,'->k');
legend("UB", "IB", "UB-LSH", "IB-LSH", "LSH1", "LSH2", "location", "northeast");
legend boxon;
xlabel("Number of Hash Tables");
ylabel("Recall")
write(f, strcat(fileName,'-hash-tables-recall'));


f= figure();
y1 = numOfUsers/1000;
y2 = numOfItems/1000;
y3 = UBLSHHashTablesCandidateSetList0/1000;
y4 = IBLSHHashTablesCandidateSetList0/1000;
plot ([1,n], [y1, y1],'-.k', [1,n], [y2, y2],'--k', x,y3,'-dk', x,y4,'-*k');
legend("numofUsers", "numOfItems","UB-LSH", "IB-LSH", "location", "northwest");
legend boxon;
xlabel("Number of Hash Tables");
ylabel("Avg. Candidate Set Size (K)");
write(f, strcat(fileName,'-hash-tables-evaluation-candidate-set'));

# ========================================================
# test case: LSH 2D
# test case:
# ========================================================
dataFileBase = data/1m/ml-1m
x = 1:10;
y = 1:10;

f= figure();

# Heatmaps
data = LSHMae2D;
contourf(x, y, data);
axis square;
colorbar;
xlabel("Hash Functions");
ylabel("Hash Tables");
title("MAE");
write(f, strcat(fileName,'-lsh-heat-map-mae'));

f= figure();
data = LSHRuntime2D / 50000;
contourf(x, y, data);
axis square;
colorbar;
xlabel("Hash Functions");
ylabel("Hash Tables");
title("Running Time (ms/prediction)");
write(f, strcat(fileName,'-lsh-heat-map-runtime'));

f= figure();
data = LSHCandidate_Set_List2D;
contourf(x, y, data);
axis square;
colorbar;
xlabel("Hash Functions");
ylabel("Hash Tables");
title("Candidate Set Size");
write(f, strcat(fileName,'-lsh-heat-map-candidate'));
