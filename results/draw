 f = figure();
 bar(numberOfRatings * 10, numberOfUsers);
 xlabel("Number of Ratings");
 ylabel("Number of Users");
 title("Amazon 1M Data Set");
 write(f, "amazon-1m-histo");


function write (f, file_name)
  H = 3.2; W = 4;
  h = f;
  set (h,'papertype', '<custom>')
  set (h,'paperunits','inches');
  set (h,'papersize',[H W])
  set (h,'paperposition', [0,0,[W H]])
  set (h,'defaultaxesposition', [0.15, 0.15, 0.75, 0.75])
  set (0,'defaultaxesfontsize', 10)
  out_file_name = strcat (file_name,'.eps');
  print('-depsc',  out_file_name);
endfunction


# ========================================================
# Model build time
# Test case: 10
# ========================================================

# Running time
x  = UBnumOfUsersList/1000;
y1 = UBmodelBuildTimeList/1000;
y2 = UBLSHmodelBuildTimeList/1000;

f= figure();
plot (x,y1,'-*k', x, y2, '-dk');
h = legend("UB", "UB-LSH", "location", "northwest");
legend boxon
xlabel("Number of Users (x1000)")
ylabel("Model Build Time (sec)");

write(f, strcat(fileName,'-10-ub-model-build-time'));


# ========================================================
# test case: UB Prediction  AND k
# test case: 50 - 58
# ========================================================
k = 1:3:30;
y = 1:3:30
f= figure();
ubmae = UBMaeKAndYList2D (:,2); #y=4
ublshmae = UBLSHMaeKAndYList2D (:,2); #y=4
plot (k, ubmae, '-dk', k, ublshmae, '-*k');
legend ("UB", "UB-LSH")
xlabel("k")
ylabel("MAE")
write (f, strcat (fileName,'-50-58-mae-k'));

# ========================================================
# test case: UB Prediction AND y
# test case: 51 - 62
# ========================================================
f = figure();
ubmae =  UBMaeKAndYList2D (7,:); #k=20
ublshmae =  UBLSHMaeKAndYList2D (7,:)
#k = 20
plot (k, ubmae, '-dk', k, ublshmae, '-*k');
legend ("UB", "UB-LSH")
xlabel("y");
ylabel("MAE")
write(f, strcat (fileName,'-51-62-mae-y'));

# ========================================================
# test case: UB - UBLSH - Prediction Heatmaps and y
# test case: 51 - 62
# ========================================================
k = 1:3:30
y = 1:3:30
# Heatmaps
f= figure();
data = UBMaeKAndYList2D;
contourf(k, y, data);
axis square;
colorbar;
xlabel("y");
ylabel("k");
title("MAE");
write (f, strcat (fileName,'-51-ub-mae-k-y-heat-map'));

f= figure();
k = 1:3:30;
y = 1:5:50;
data = UBLSHMaeKAndYList2D;
contourf(y, k, data);
axis square;
colorbar;
xlabel("y");
ylabel("k");
title("MAE");
write(f, strcat(fileName,'-62-mae-ublsh-k-y-heat-map'));


# ========================================================
# Heat Maps for MAE and Runtime - Hash Functions & k
# Test case: 54,
# ========================================================

x = 1:10;
y = 1:3:30;

f= figure();

# Heatmaps
data = UBLSHkHashFunctionsMae2D;
contourf(x, y, data);
axis square;
colorbar;
xlabel("Hash Functions");
ylabel("k");
title("MAE");
write(f, strcat (fileName,'-54-mae-hash-functions-k-heat-map'));

#Hash Functions and k
mae =  UBLSHkHashFunctionsMae2D (:,2)
f = figure();
plot (k, mae);
legend("y=10, numOfHashFunc=4");
xlabel("k");
ylabel("MAE");
write(f, strcat (fileName,'-54-ublsh-mae-k'));

# Hash Functions and k
# k = 20
mae =  UBLSHkHashFunctionsMae2D (8,:)
f = figure();
plot (x, mae);
legend("y=10, k=20");
xlabel("Hash Functions");
ylabel("MAE");
write(f, strcat (fileName,'-54-ublsh-mae-hash-functions'));


# ========================================================
# Heat Maps for MAE and Runtime - Hash Functions & y
# test case : 55
# ========================================================

x = 1:10;
y = 1:3:30;

f= figure();
# Heatmaps
data = UBLSHyHashFunctionsMae2D;
contourf(x, y, data);
axis square;
colorbar;
xlabel("Hash Functions");
ylabel("y");
title("MAE");
write(f, strcat(fileName,'-55-mae-hash-functions-y-heat-map'));


# ========================================================
# test case: UBLSHHashTables Prediction Performance
# test case: 56
# ========================================================
x = 1:10
# Heatmaps
f= figure();
mae =  UBLSHHashTablesMaeList;
f = figure();
plot (x, mae);
xlabel("Hash Tables");
ylabel("MAE");
write(f, strcat (fileName,'-56-ublsh-mae-hash-tables'));

f= figure();
runtime =  UBLSHHashTablesRuntimeList / 1000;
plot (x, runtime);
xlabel("Hash Tables");
ylabel("Runtime (sec)");
write(f, strcat (fileName,'-56-ublsh-runtime-hash-tables'));


# ========================================================
# test case: UBLSHHashFunctions Prediction Performance
# test case: 57
# ========================================================
x = 1:10
# Heatmaps
f= figure();
mae =  UBLSHHashFunctionsMaeList;
plot (x, mae);
xlabel("Hash Functions");
ylabel("MAE");
write(f, strcat (fileName,'-57-ublsh-mae-hash-functions'));

f= figure();
runtime =  UBLSHHashFunctionsRuntimeList / 1000;
plot (x, runtime);
xlabel("Hash Functions");
ylabel("Runtime (sec)");
write(f, strcat (fileName,'-57-ublsh-runtime-hash-functions'));

f= figure();
ratio = PredictedItemsList/8357 .* 100;
plot (x, ratio);
xlabel("Hash Functions");
ylabel("Predicted Items %");
write(f, strcat (fileName,'-57-ublsh-predicted-hash-functions'));

f= figure();
plot (x, UBLSHCandidateSetList);
xlabel("Hash Functions");
ylabel("Cadidate Set Size");
write(f, strcat (fileName,'-57-ublsh-candidate-hash-functions'));


# ========================================================
# test case: UBLSH 2D
# test case: 59
# ========================================================
x = 1:10;
y = 1:10;

f= figure();

# Heatmaps
data = UBLSHMae2D;
contourf(x, y, data);
axis square;
colorbar;
xlabel("Hash Functions");
ylabel("Hash Tables");
title("MAE");
write(f, strcat(fileName,'-59-mae-ublsh-heat-map'));

f= figure();
data = UBLSHRuntime2D / 1000;
contourf(x, y, data);
axis square;
colorbar;
xlabel("Hash Functions");
ylabel("Hash Tables");
title("Running Time (sec)");
write(f, strcat(fileName,'-59-runtime-ublsh-heat-map'));

f= figure();
data = UBLSHCandidate_Set_List2D;
contourf(x, y, data);
axis square;
colorbar;
xlabel("Hash Functions");
ylabel("Hash Tables");
title("Candidate Set Size");
write(f, strcat(fileName,'-59-candidate-ublsh-heat-map'));

# ========================================================
# test case: UB Precision & k
# test case: 70
# ========================================================
dataFileBase = data/100k/ml
UBPrecisionAndKList = [0.008039215686274512, 0.0100046685340803, 0.01471055088702148, 0.016080765639589167, 0.015296451914098971, 0.01568860877684407, 0.01706115779645192, 0.017845471521942113, 0.01804154995331466, 0.018041549953314664]

k = 1:3:30;
mae =  UBPrecisionAndKList;
f = figure();
plot (k, mae)
xlabel("k");
ylabel("Precision")
write(f, strcat(fileName,'-70-precision-ub-k'));


# ========================================================
# test case: UBLSH Precision & k
# test case: 71
# ========================================================
dataFileBase = data/100k/ml
UBLSHPrecisionAndKList = [0.010196078431372553, 0.00804388422035481, 0.004705882352941177, 0.004313725490196078, 0.00392156862745098, 0.0037254901960784314, 0.004313725490196078, 0.00392156862745098, 0.0037254901960784314, 0.004313725490196079]
k = 1:3:30;
mae =  UBLSHPrecisionAndKList;
f = figure();
plot (k, mae)
xlabel("k");
ylabel("Precision")
write(f, strcat(fileName,'-71-precision-ublsh-k'));

# ========================================================
# test case: UBLSH 2D Precision - Hash Functions vs. k
# test case: 72
# ========================================================

f= figure();
data = UBLSHHashFunctionsAndKPrecision2D;
contourf(x, y, data);
axis square;
colorbar;
xlabel("Hash Functions");
ylabel("k");
title("Precision");
write(f, strcat(fileName,'-72-precision-hash-functions-k-heat-map'));


f= figure();
data = UBLSHHashFunctionsAndKPrecision2D(7,:);
plot (x, data);
xlabel("Hash Functions");
ylabel("Precision");
write(f, strcat(fileName,'-72-precision-hash-functions'));

f= figure();
k = 1:3:30
data = UBLSHHashFunctionsAndKPrecision2D(:,4);
plot (k, data);
xlabel("k");
ylabel("Precision");
write(f, strcat(fileName,'-72-precision-k'));


# ========================================================
# test case: UBLSH 2D Precision - Hash Tables vs. k
# test case: 73
# ========================================================
dataFileBase = data/100k/ml
k = 31
UBLSHHashTablesAndKPrecision2D = [[0.009607843137254905, 0.009019607843137259, 0.007647058823529414, 0.009215686274509806, 0.009803921568627454, 0.00843137254901961, 0.008235294117647063, 0.010196078431372553, 0.00882352941176471, 0.00921568627450981], [0.009215686274509808, 0.006078431372549022, 0.005686274509803924, 0.007450980392156865, 0.007058823529411767, 0.005296451914098974, 0.006080765639589171, 0.007450980392156865, 0.006276844070961719, 0.007450980392156863], [0.003529411764705882, 0.004509803921568627, 0.006666666666666668, 0.0045098039215686276, 0.0058823529411764705, 0.006470588235294117, 0.006666666666666668, 0.009215686274509806, 0.009218020541549956, 0.009218020541549956], [0.004901960784313725, 0.0031395891690009334, 0.005490196078431373, 0.004901960784313725, 0.006666666666666668, 0.007647058823529414, 0.006666666666666667, 0.011372549019607847, 0.008235294117647061, 0.010392156862745102], [0.0021568627450980395, 0.002549019607843137, 0.006666666666666668, 0.0068627450980392165, 0.003529411764705882, 0.007254901960784317, 0.009019607843137259, 0.009021942110177409, 0.008039215686274514, 0.008627450980392158], [0.002549019607843137, 0.0025490196078431374, 0.004117647058823529, 0.005294117647058824, 0.009803921568627456, 0.009411764705882356, 0.008039215686274512, 0.010198412698412701, 0.010980392156862749, 0.012551353874883292], [0.002745098039215686, 0.0033333333333333335, 0.005100373482726425, 0.007254901960784317, 0.00862745098039216, 0.00862745098039216, 0.009019607843137259, 0.009610177404295055, 0.010392156862745102, 0.00882352941176471], [0.00411764705882353, 0.006078431372549021, 0.0027450980392156863, 0.004316059757236227, 0.0064705882352941195, 0.010786647992530351, 0.009019607843137259, 0.01058823529411765, 0.012355275443510741, 0.012551353874883292], [0.0033333333333333327, 0.002156862745098039, 0.005686274509803922, 0.0033333333333333327, 0.007450980392156863, 0.007453314659197013, 0.010000000000000004, 0.011960784313725494, 0.010394491129785252, 0.010196078431372551], [0.003725490196078431, 0.0013725490196078432, 0.005294117647058824, 0.004512138188608776, 0.0068650793650793665, 0.009215686274509806, 0.00843137254901961, 0.008235294117647061, 0.008433706816059762, 0.011568627450980397]];
UBLSHHashTablesAndKCandidate_Set_List2D = [[75.79122315592905, 181.6528011204482, 240.17091503267977, 317.22591036414565, 388.62483660130715, 422.13165266106444, 485.4549486461251, 532.1661998132586, 579.4368814192344, 563.9344537815126], [103.3703548085901, 178.21451914098975, 266.1920634920635, 320.61946778711484, 353.6063492063492, 443.17642390289444, 487.2894491129785, 526.9903361344537, 539.7619514472456, 587.7304855275444], [86.55228758169933, 180.07273576097103, 286.7774042950514, 332.34752567693744, 348.3464985994398, 444.5987394957983, 519.0496732026144, 540.2571428571428, 583.6682072829132, 599.3997198879551], [74.75354808590102, 203.71643323996264, 260.9275910364145, 319.37184873949576, 338.8674136321195, 430.4386087768441, 488.3942110177404, 533.885294117647, 596.9210084033614, 599.0616246498599], [85.05074696545284, 175.02450980392157, 281.9234360410831, 346.22273576097103, 369.934126984127, 423.1936507936509, 484.5213818860878, 484.85826330532217, 546.9616246498599, 609.2958916900094], [93.8499533146592, 170.19145658263304, 284.3140989729225, 327.684360410831, 361.1478991596639, 411.9058823529412, 507.725116713352, 509.0284780578899, 574.3266573295984, 592.14593837535], [98.25592903828198, 174.71909430438845, 247.7372549019608, 339.7495798319328, 399.2765172735761, 397.94747899159665, 490.791223155929, 519.0168067226891, 547.9232492997199, 595.0952847805789], [102.38417366946778, 205.80887021475255, 222.17231559290386, 320.790522875817, 360.36998132586365, 443.574183006536, 488.009010270775, 534.9388888888889, 575.6488795518208, 588.8870214752568], [73.49869281045751, 175.07413632119514, 244.0888422035481, 296.1624649859944, 396.0545284780579, 437.258543417367, 470.21601307189536, 548.455929038282, 564.9337535014006, 569.5980392156863], [84.51526610644257, 171.75060690943045, 226.13211951447246, 341.51932773109246, 371.825116713352, 445.2800653594771, 496.49295051353874, 511.85200746965455, 548.2781512605043, 576.3356209150328]];

f= figure();
data = UBLSHHashTablesAndKPrecision2D;
contourf(x, y, data);
axis square;
colorbar;
xlabel("Hash Tables");
ylabel("k");
title("Precision");
write(f, strcat(fileName,'-73-precision-hash-tables-k-heat-map'));


f= figure();
data = UBLSHHashTablesAndKPrecision2D(7,:);
plot (x, data);
xlabel("Hash Tables");
ylabel("Precision");
write(f, strcat(fileName,'-73-precision-hash-tables'));

f= figure();
k = 1:3:30
data = UBLSHHashTablesAndKPrecision2D(:,4);
plot (k, data);
xlabel("k");
ylabel("Precision");
write(f, strcat(fileName,'-73-precision-k'));


# ========================================================
# test case: UBLSH Precision & y
# test case: 74
# ========================================================
dataFileBase = data/100k/ml
UBLSHPrecisionAndYList = [0.005294117647058823, 0.005098039215686274, 0.005098039215686274, 0.005294117647058824, 0.004705882352941177, 0.005294117647058824, 0.00627450980392157, 0.004705882352941175, 0.006470588235294117, 0.005294117647058823]
y = 1:3:30;
mae =  UBLSHPrecisionAndYList;
f = figure();
plot (y, mae)
xlabel("y");
ylabel("Precision")
write(f, strcat(fileName,'-74-precision-ublsh-y'));

# ========================================================
# test case: UBLSH 2D - Precision (y & k) test
# test case: 75
# ========================================================
k = 1:3:30;
y = 1:3:30;
f= figure();
# Heatmaps
data = UBLSHYAndKPrecision2D;
contourf(y, k, data);
axis square;
colorbar;
xlabel("y");
ylabel("k");
title("Precision");
write(f, strcat(fileName,'-75-precision-ublsh-y-k-map'));


# ========================================================
# test case: UB 2D - Precision (y & k) test
# test case: 76
# ========================================================

k = 1:3:30;
y = 1:3:30;
f= figure();
data = UBYAndKPrecision2D;
contourf(y, k, data);
axis square;
colorbar;
xlabel("y");
ylabel("k");
title("Precision");
write(f, strcat(fileName,'-76-precision-ub-y-k-map'));


k = 1:3:30;
ublsh =  UBLSHYAndKPrecision2D(:,2);
ub = UBYAndKPrecision2D(:,4)
f = figure();
plot (k, ub, k, ublsh);
legend("UB", "UB-LSH");
xlabel("k");
ylabel("Precision");
write(f, strcat(fileName,'-75-precision-k'));

y = 1:3:30;
ublsh =  UBLSHYAndKPrecision2D(7,:);
ub = UBYAndKPrecision2D(7,:)
f = figure();
plot (y, ub, y, ublsh);
legend("UB", "UB-LSH");
xlabel("y");
ylabel("Precision");
write(f, strcat(fileName,'-75-precision-y'));
